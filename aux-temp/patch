=== modified file 'ToyKeeper/spaghetti-monster/anduril/aux-leds.c'
--- ToyKeeper/spaghetti-monster/anduril/aux-leds.c	2021-10-09 15:57:48 +0000
+++ ToyKeeper/spaghetti-monster/anduril/aux-leds.c	2022-02-05 00:48:58 +0000
@@ -72,6 +72,26 @@
     return pgm_read_byte(rgb_led_colors + color_num);
 }
 
+uint8_t temperature_to_rgb() {
+    static const uint8_t temp_levels[] = {
+    // temperature in Celsius, color
+          0, 5, // 5, R + B =>pink/purple  <=12 C
+         12, 4, // 4,     B                (12,16] C
+         16, 3, // 3,   G+B =>cyan         (16,20] C
+         20, 2, // 2,   G                  (20,25] C
+         25, 1, // 1, R+G   =>yellow       (25,28] C
+         28, 0, // 0, R                    >28 C
+        255, 0, // 0, R
+    };
+    int16_t temps = temperature;
+    if (temps < 0) return 0;
+
+    uint8_t i;
+    for (i = 0; temps >= temp_levels[i]; i += 2) {}
+    uint8_t color_num = temp_levels[(i - 2) + 1];
+    return pgm_read_byte(rgb_led_colors + color_num);
+}
+
 // do fancy stuff with the RGB aux LEDs
 // mode: 0bPPPPCCCC where PPPP is the pattern and CCCC is the color
 // arg: time slice number
@@ -123,7 +143,7 @@
         }
         actual_color = pgm_read_byte(colors + rainbow);
     }
-    else {  // voltage
+    else if (color == 9) {  // voltage
         // show actual voltage while asleep...
         if (go_to_standby) {
             actual_color = voltage_to_rgb();
@@ -137,6 +157,13 @@
             actual_color = pgm_read_byte(colors + (((arg>>1) % 3) << 1));
         }
     }
+    else {   // temperature
+        actual_color = temperature_to_rgb();
+        if (!go_to_standby) {
+            // during preview, flash current temperature's colors quickly
+            pattern = (arg >> 1) % 3;
+        }
+    }
 
     // pick a brightness from the animation sequence
     if (pattern == 3) {

=== modified file 'ToyKeeper/spaghetti-monster/anduril/aux-leds.h'
--- ToyKeeper/spaghetti-monster/anduril/aux-leds.h	2021-04-14 06:09:23 +0000
+++ ToyKeeper/spaghetti-monster/anduril/aux-leds.h	2022-02-05 00:51:17 +0000
@@ -35,8 +35,10 @@
  * 4:   B
  * 5: R B
  * 6: RGB
- * 7: rainbow
- * 8: voltage
+ * 7: disco
+ * 8: rainbow
+ * 9: voltage
+ * 10: temperature
  */
 const PROGMEM uint8_t rgb_led_colors[] = {
     0b00000001,  // 0: red

